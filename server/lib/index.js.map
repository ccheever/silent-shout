{"version":3,"sources":["../src/index.js"],"names":["port","app","listen","console","log","startAsync","addUser","addPost","post1","id","userId","message","postTime","post2","DATA","POSTS","USERS","ccheever","name","photoUrl","fsc","LIST_OF_POSTS","get","req","res","send","JSON","stringify","props","user","post","Date","now","unshift","all","query","require","main","module","process","argv"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express';\nimport promisePrint from 'promise-print';\n\nexport const app = express();\n\nlet post1 = {\n  id: 'post:1',\n  userId: 'ccheever',\n  message: \"Hello world\",\n  postTime: 1477539803158,\n};\nlet post2 = {\n  id: 'post:2',\n  userId: 'fsc',\n  message: \"Need anything from the store?\",\n  postTime: 1477539811381,\n};\nconst DATA = {\n  POSTS: {\n    'post:1': post1,\n    'post:2': post2,\n  },\n  USERS: {\n    ccheever: {\n      id: 'ccheever',\n      name: 'Charlie Cheever',\n      photoUrl: 'http://www.incimages.com/uploaded_files/image/1940x900/charlie-cheever-quora-pan_20353.jpg',\n    },\n    fsc: {\n      id: 'fsc',\n      name: 'Francie Cheever',\n      photoUrl: 'https://media.licdn.com/mpr/mpr/shrinknp_200_200/p/6/005/0a2/1ca/29d9837.jpg',\n    },\n  },\n  LIST_OF_POSTS: [post2, post1],\n};\n\napp.get('/', function (req, res) {\n  res.send(JSON.stringify(DATA));\n});\n\napp.get('/posts', (req, res) => {\n  res.send(JSON.stringify(DATA.LIST_OF_POSTS));\n});\n\napp.get('/users', (req, res) => {\n  res.send(JSON.stringify(DATA.USERS));\n});\n\nexport function addUser(props) {\n  let {id, name, photoUrl} = props;\n  let user = {id, name, photoUrl};\n  DATA.USERS[user.id] = user;\n  return user;\n}\n\nexport function addPost(props) {\n  let {id, userId, message} = props;\n  let post = {id, userId, message};\n  post.postTime = Date.now();\n  DATA.POSTS[post.id] = post;\n  DATA.LIST_OF_POSTS.unshift(post);\n}\n\napp.all('/create_user', (req, res) => {\n  let user = addUser(req.query);\n  res.send(JSON.stringify(user));\n});\n\napp.all('/create_post', (req, res) => {\n  let post = addPost(req.query);\n  res.send(JSON.stringify(post));\n});\n\nexport async function startAsync(port) {\n  port = port || 3000;\n  app.listen(port, () => {\n    console.log(\"Server started on port\", port);\n  });\n}\n\nif (require.main === module) {\n  promisePrint(startAsync(process.argv[2]));\n}\n\nexport default startAsync;\n"]}